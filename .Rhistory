# Convert to factor labels if needed
acs_data <- acs_data %>%
mutate(birthplace_label = haven::as_factor(birthplace))
# Filter out U.S. & Territories and Other/Unknown using the *label*
birthplace_all <- acs_data %>%
filter(!birthplace_label %in% c("U.S. & Territories", "Other/Unknown")) %>%
count(birthplace_label) %>%
arrange(desc(n))
# Plot with labels and commas
ggplot(birthplace_all, aes(x = reorder(birthplace_label, -n), y = n)) +
geom_bar(stat = "identity", fill = "#21618c") +
geom_text(aes(label = comma(n)), vjust = -0.3, size = 3) +
labs(
title = "Demographic Diversity by Birthplace (Foreign-Born Only)",
x = "Birthplace Region",
y = "Count of Individuals"
) +
scale_y_continuous(labels = label_comma()) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 7))
library(tidymodels)
acs_data <- acs_data %>%
mutate(industry_name = case_when(
industry_encoded == 1  ~ "Agriculture & Forestry",
industry_encoded == 2  ~ "Mining & Oil",
industry_encoded == 3  ~ "Construction",
industry_encoded == 4  ~ "Manufacturing",
industry_encoded == 5  ~ "Wholesale",
industry_encoded == 6  ~ "Retail",
industry_encoded == 7  ~ "Transportation",
industry_encoded == 8  ~ "Information",
industry_encoded == 9  ~ "Finance & Real Estate",
industry_encoded == 10 ~ "Professional Services",
industry_encoded == 11 ~ "Education & Health",
industry_encoded == 12 ~ "Arts",
industry_encoded == 13 ~ "Other Services",
industry_encoded == 14 ~ "Public Administration",
industry_encoded == 15 ~ "Military",
industry_encoded == 16 ~ "Unemployed"
))
library(tidymodels)
library(tidymodels)
library(tidymodels)
install.packages("tidymodels")
library(tidymodels)
library(tidyverse)
library(haven)
library(scales)
# Convert to factor labels if needed
acs_data <- acs_data %>%
mutate(birthplace_label = haven::as_factor(birthplace))
# Filter out U.S. & Territories and Other/Unknown using the *label*
birthplace_all <- acs_data %>%
filter(!birthplace_label %in% c("U.S. & Territories", "Other/Unknown")) %>%
count(birthplace_label) %>%
arrange(desc(n))
# Plot with labels and commas
ggplot(birthplace_all, aes(x = reorder(birthplace_label, -n), y = n)) +
geom_bar(stat = "identity", fill = "#21618c") +
geom_text(aes(label = comma(n)), vjust = -0.3, size = 3) +
labs(
title = "Demographic Diversity by Birthplace (Foreign-Born Only)",
x = "Birthplace Region",
y = "Count of Individuals"
) +
scale_y_continuous(labels = label_comma()) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 7))
library(tidymodels)
library(tidyverse)
library(haven)
library(scales)
acs_data <- read_dta("~/Dropbox/Metrics Project/cleaneddata/clean_data.dta")
acs_data <- acs_data %>%
filter(empstat == 1, incwage_adj > 0)
# Convert to factor labels if needed
acs_data <- acs_data %>%
mutate(birthplace_label = haven::as_factor(birthplace))
# Filter out U.S. & Territories and Other/Unknown using the *label*
birthplace_all <- acs_data %>%
filter(!birthplace_label %in% c("U.S. & Territories", "Other/Unknown")) %>%
count(birthplace_label) %>%
arrange(desc(n))
# Plot with labels and commas
ggplot(birthplace_all, aes(x = reorder(birthplace_label, -n), y = n)) +
geom_bar(stat = "identity", fill = "#21618c") +
geom_text(aes(label = comma(n)), vjust = -0.3, size = 3) +
labs(
title = "Demographic Diversity by Birthplace (Foreign-Born Only)",
x = "Birthplace Region",
y = "Count of Individuals"
) +
scale_y_continuous(labels = label_comma()) +
theme_classic() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 7))
# Tertiles for low, medium, high income
acs_data <- acs_data %>%
mutate(income_group = ntile(incwage_adj, 3)) %>%
mutate(income_group = case_when(
income_group == 1 ~ "Low",
income_group == 2 ~ "Medium",
income_group == 3 ~ "High"
))
educ_labels <- c(
"00" = "N/A or no schooling",
"01" = "Nursery to grade 4",
"02" = "Grade 5–8",
"03" = "Grade 9",
"04" = "Grade 10",
"05" = "Grade 11",
"06" = "Grade 12",
"07" = "1 year of college",
"08" = "2 years of college",
"09" = "3 years of college",
"10" = "4 years of college",
"11" = "5+ years of college"
)
acs_data <- acs_data %>%
mutate(educ = factor(sprintf("%02d", educ), levels = names(educ_labels), labels = educ_labels))
# Group education levels into three categories
acs_data <- acs_data %>%
mutate(educ_grouped = case_when(
educ %in% c("N/A or no schooling", "Nursery to grade 4", "Grade 5–8",
"Grade 9", "Grade 10", "Grade 11") ~ "Low Educated",
educ %in% c("Grade 12", "1 year of college", "2 years of college", "3 years of college") ~ "Medium Educated",
educ %in% c("4 years of college", "5+ years of college") ~ "Highly Educated"
))
# Descriptive table for counts
acs_data %>%
count(educ_grouped, income_group) %>%
group_by(educ_grouped) %>%
mutate(percent = round(100 * n / sum(n), 2)) %>%
ungroup()
educ_income_grouped <- acs_data %>%
filter(!is.na(educ_grouped)) %>%
group_by(educ_grouped, income_group) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(educ_grouped) %>%
mutate(percent = count / sum(count) * 100)
educ_income_grouped <- educ_income_grouped %>%
mutate(educ_grouped = factor(educ_grouped,
levels = c("Low Educated", "Medium Educated", "Highly Educated"))) %>%
mutate(income_group = factor(income_group, levels = c("High", "Medium", "Low")))
ggplot(educ_income_grouped, aes(x = educ_grouped, y = percent, fill = income_group)) +
geom_bar(stat = "identity") +
labs(x = "Educational Attainment Group", y = "Percentage within Education Group",
fill = "Income Group") +
theme_classic() +
theme(axis.text.x = element_text(size = 10)) + scale_fill_viridis_d()
acs_data <- acs_data %>%
mutate(
citizen_label = case_when(
citizen == 0 ~ "Citizen",
citizen == 1 ~ "Naturalized Citizen",
citizen == 2 ~ "Non-Citizen"
),
sex_label = case_when(
sex == 1 ~ "Male",
sex == 2 ~ "Female"
)
)
educ_income_grouped <- acs_data %>%
filter(!is.na(educ_grouped)) %>%
group_by(educ_grouped, income_group, citizen_label, sex_label) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(educ_grouped, citizen_label, sex_label) %>%
mutate(percent = count / sum(count) * 100) %>%
ungroup() %>%
mutate(
educ_grouped = factor(educ_grouped, levels = c("Low Educated", "Medium Educated", "Highly Educated")),
income_group = factor(income_group, levels = c("High", "Medium", "Low")))
ggplot(educ_income_grouped, aes(x = educ_grouped, y = percent, fill = income_group)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Educational Attainment Group", y = "Percentage within Education Group",
fill = "Income Group") +
scale_fill_viridis_d() +
theme_classic() +
theme(axis.text.x = element_text(size = 4.5),
strip.text = element_text(size = 10)) +
facet_grid(sex_label ~ citizen_label)
acs_data <- acs_data %>%
mutate(industry_name = case_when(
industry_encoded == 1  ~ "Agriculture & Forestry",
industry_encoded == 2  ~ "Mining & Oil",
industry_encoded == 3  ~ "Construction",
industry_encoded == 4  ~ "Manufacturing",
industry_encoded == 5  ~ "Wholesale",
industry_encoded == 6  ~ "Retail",
industry_encoded == 7  ~ "Transportation",
industry_encoded == 8  ~ "Information",
industry_encoded == 9  ~ "Finance & Real Estate",
industry_encoded == 10 ~ "Professional Services",
industry_encoded == 11 ~ "Education & Health",
industry_encoded == 12 ~ "Arts",
industry_encoded == 13 ~ "Other Services",
industry_encoded == 14 ~ "Public Administration",
industry_encoded == 15 ~ "Military",
industry_encoded == 16 ~ "Unemployed"
))
# Compute foreign-born to citizen worker ratio by industry
ratio_data <- acs_data %>%
filter(!is.na(industry_name)) %>%
group_by(industry_name, citizen_label) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = citizen_label, values_from = count, values_fill = 0) %>%
mutate(
foreign_born = `Naturalized Citizen` + `Non-Citizen`,
ratio = foreign_born / Citizen
) %>%
arrange(desc(ratio))
# Compute counts by industry and citizenship
ratio_data_detailed <- acs_data %>%
filter(!is.na(industry_name)) %>%
group_by(industry_name, citizen_label) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(
names_from = citizen_label,
values_from = count,
values_fill = 0
) %>%
mutate(
ratio_nat = `Naturalized Citizen` / Citizen,
ratio_non = `Non-Citizen` / Citizen
) %>%
arrange(desc(ratio_nat + ratio_non))
# Pivot longer for plotting both ratios
ratio_long <- ratio_data_detailed %>%
select(industry_name, ratio_nat, ratio_non) %>%
pivot_longer(cols = starts_with("ratio"), names_to = "Group", values_to = "Ratio") %>%
mutate(Group = recode(Group,
ratio_nat = "Naturalized Citizen",
ratio_non = "Non-Citizen"))
# Plot with viridis colors
ggplot(ratio_long, aes(x = reorder(industry_name, Ratio), y = Ratio, fill = Group)) +
geom_col(position = "stack") + coord_flip() +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
scale_fill_viridis_d(option = "G", begin = 0.2, end = 0.8) +
labs(x = "Industry",
y = "Ratio (Foreign-Born / Citizen)",
fill = "Group") +
theme_minimal() +
theme(axis.text.y = element_text(size = 9))
<div style="width:24px;height:24px;">
<svg viewBox="0 0 24 24">
<path d="M14,10H...Z" />
</svg>
</div>
